# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- '*'

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python39Test:
      python.version: '3.9'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m venv antenv
    source antenv/bin/activate
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies(Python)'

- script: |
    sudo apt-get update
    sudo apt-get install -y unixodbc-dev libgssapi-krb5-2 odbcinst1debian2 msodbcsql17
  # sudo dpkg -i msodbcsql17_17.7.2.1-1_amd64.deb
  displayName: 'Install dependencies(Ubuntu)'


# - script: |
#     pip install pytest pytest-azurepipelines
#     pytest
#   displayName: 'pytest'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: # (no value); this input is optional
- publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
  displayName: 'Upload package'
  artifact: drop
